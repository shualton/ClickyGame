{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","currentMessage","App","state","cards","endGame","_this","setState","console","log","this","forEach","card","count","find","click","index","sort","Math","random","_this2","components_Wrapper_Wrapper","components_Header_Header","map","components_Card_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"g6EAWeA,SARF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MAC1DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCDxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCY1CC,SAZA,SAAAd,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,kBACkBJ,EAAMe,MADxB,eAC2Cf,EAAMgB,WAEjDf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZJ,EAAMiB,0BC4DEC,6MA/DXC,MAAQ,CACJC,QACAL,MAAO,EACPC,UAAW,EACXC,eAAgB,mDAGpBI,QAAU,WAUN,OATGC,EAAKH,MAAMJ,MAAQO,EAAKH,MAAMH,WAC7BM,EAAKC,SAAS,CAACP,UAAWM,EAAKH,MAAMJ,OAAQ,WACzCS,QAAQC,IAAIC,KAAKP,MAAMH,aAG/BM,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACrBA,EAAKC,MAAQ,IAEjBP,EAAKC,SAAS,CAACR,MAAM,KACd,KAGXT,WAAa,SAAAC,GACTe,EAAKH,MAAMC,MAAMU,KAAK,SAACC,EAAMC,GACzB,GAAID,EAAMxB,KAAOA,EAAI,CACjB,GAA0B,IAAvBa,EAAMY,GAAOH,MASZ,OARAT,EAAMY,GAAOH,OAAS,EACtBP,EAAKC,SAAS,CAACR,MAAQO,EAAKH,MAAMJ,MAAO,GAAI,WACzCS,QAAQC,IAAIC,KAAKP,MAAMJ,SAE3BO,EAAKH,MAAMC,MAAMa,KAAK,kBAAMC,KAAKC,SAAW,KAC5Cb,EAAKC,SAAS,CAACN,eAAiB,oBAAqB,WACjDO,QAAQC,IAAIC,KAAKP,MAAMF,mBAEpB,EAEPK,EAAKC,SAAS,CAACN,eAAiB,yBAA0B,WACtDO,QAAQC,IAAIC,KAAKP,MAAMF,kBAE3BK,EAAKD,sFAOZ,IAAAe,EAAAV,KACL,OACEzB,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CAAQvB,MAAOW,KAAKP,MAAMJ,MAAOC,UAAWU,KAAKP,MAAMH,UAAWC,eAAgBS,KAAKP,MAAMF,gBAA7F,gBAGCS,KAAKP,MAAMC,MAAMmB,IAAI,SAAAX,GAAI,OACxB3B,EAAAC,EAAAC,cAACqC,EAAD,CACElC,WAAY8B,EAAK9B,WACjBC,GAAIqB,EAAKrB,GACTkC,IAAKb,EAAKrB,GACVI,MAAOiB,EAAKjB,kBAxDV+B,mBCDlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.98fa7493.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Current Score: {props.score} Highscore: {props.highscore}\n    </div>\n    <div className=\"message\">\n      {props.currentMessage}\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n    state = {\n        cards,\n        score: 0,\n        highscore: 0,\n        currentMessage: \"Click all the characters without any repeats!\"\n    };\n\n    endGame = () => {\n        if(this.state.score > this.state.highscore) {\n            this.setState({highscore: this.state.score}, function(){\n                console.log(this.state.highscore);\n            });\n        }\n        this.state.cards.forEach(card => {\n            card.count = 0;\n        });\n        this.setState({score:0});\n        return true;\n    }\n\n    clickCount = id => {\n        this.state.cards.find((click,index) => {\n            if (click.id === id) {\n                if(cards[index].count === 0) {\n                    cards[index].count += 1;\n                    this.setState({score : this.state.score +1}, function() {\n                        console.log(this.state.score);\n                    });\n                    this.state.cards.sort(() => Math.random() - 0.5)\n                    this.setState({currentMessage : \"Nice! Keep going\"}, function() {\n                        console.log(this.state.currentMessage);\n                    });\n                    return true;\n                } else {\n                    this.setState({currentMessage : \"Game Over: Try Again!\"}, function() {\n                        console.log(this.state.currentMessage);\n                    });\n                    this.endGame();\n                }\n            }\n            \n        });\n    }\n\n    render() {\n        return (\n          <Wrapper>\n            <Header score={this.state.score} highscore={this.state.highscore} currentMessage={this.state.currentMessage}>\n                Clicky Time!\n                </Header>\n            {this.state.cards.map(card => (\n              <Card\n                clickCount={this.clickCount}\n                id={card.id}\n                key={card.id}\n                image={card.image}\n              />\n            ))}\n          </Wrapper>\n        );\n      }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}